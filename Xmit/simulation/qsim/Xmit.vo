// Copyright (C) 1991-2016 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus Prime License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 16.0.0 Build 211 04/27/2016 SJ Lite Edition"

// DATE "11/04/2016 21:20:21"

// 
// Device: Altera EP4CE6E22C6 Package TQFP144
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module out_FSM (
	clk_phy,
	reset,
	data_in,
	ctrl_block_in,
	frame_seq_out,
	xmit_done_out,
	data_out);
input 	clk_phy;
input 	reset;
input 	[7:0] data_in;
input 	[23:0] ctrl_block_in;
output 	[11:0] frame_seq_out;
output 	xmit_done_out;
output 	[3:0] data_out;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \ctrl_block_in[0]~input_o ;
wire \ctrl_block_in[1]~input_o ;
wire \ctrl_block_in[2]~input_o ;
wire \ctrl_block_in[3]~input_o ;
wire \ctrl_block_in[4]~input_o ;
wire \ctrl_block_in[5]~input_o ;
wire \ctrl_block_in[6]~input_o ;
wire \ctrl_block_in[7]~input_o ;
wire \ctrl_block_in[8]~input_o ;
wire \ctrl_block_in[9]~input_o ;
wire \ctrl_block_in[10]~input_o ;
wire \ctrl_block_in[11]~input_o ;
wire \ctrl_block_in[12]~input_o ;
wire \ctrl_block_in[13]~input_o ;
wire \ctrl_block_in[14]~input_o ;
wire \ctrl_block_in[15]~input_o ;
wire \ctrl_block_in[16]~input_o ;
wire \ctrl_block_in[17]~input_o ;
wire \ctrl_block_in[18]~input_o ;
wire \ctrl_block_in[19]~input_o ;
wire \ctrl_block_in[20]~input_o ;
wire \ctrl_block_in[21]~input_o ;
wire \ctrl_block_in[22]~input_o ;
wire \ctrl_block_in[23]~input_o ;
wire \clk_phy~input_o ;
wire \reset~input_o ;
wire \data_in[0]~input_o ;
wire \data_in[4]~input_o ;
wire \data_in[1]~input_o ;
wire \data_in[5]~input_o ;
wire \data_in[2]~input_o ;
wire \data_in[6]~input_o ;
wire \data_in[3]~input_o ;
wire \data_in[7]~input_o ;
wire \frame_seq_out[0]~output_o ;
wire \frame_seq_out[1]~output_o ;
wire \frame_seq_out[2]~output_o ;
wire \frame_seq_out[3]~output_o ;
wire \frame_seq_out[4]~output_o ;
wire \frame_seq_out[5]~output_o ;
wire \frame_seq_out[6]~output_o ;
wire \frame_seq_out[7]~output_o ;
wire \frame_seq_out[8]~output_o ;
wire \frame_seq_out[9]~output_o ;
wire \frame_seq_out[10]~output_o ;
wire \frame_seq_out[11]~output_o ;
wire \xmit_done_out~output_o ;
wire \data_out[0]~output_o ;
wire \data_out[1]~output_o ;
wire \data_out[2]~output_o ;
wire \data_out[3]~output_o ;


cycloneive_io_obuf \frame_seq_out[0]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\frame_seq_out[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \frame_seq_out[0]~output .bus_hold = "false";
defparam \frame_seq_out[0]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \frame_seq_out[1]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\frame_seq_out[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \frame_seq_out[1]~output .bus_hold = "false";
defparam \frame_seq_out[1]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \frame_seq_out[2]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\frame_seq_out[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \frame_seq_out[2]~output .bus_hold = "false";
defparam \frame_seq_out[2]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \frame_seq_out[3]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\frame_seq_out[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \frame_seq_out[3]~output .bus_hold = "false";
defparam \frame_seq_out[3]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \frame_seq_out[4]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\frame_seq_out[4]~output_o ),
	.obar());
// synopsys translate_off
defparam \frame_seq_out[4]~output .bus_hold = "false";
defparam \frame_seq_out[4]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \frame_seq_out[5]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\frame_seq_out[5]~output_o ),
	.obar());
// synopsys translate_off
defparam \frame_seq_out[5]~output .bus_hold = "false";
defparam \frame_seq_out[5]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \frame_seq_out[6]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\frame_seq_out[6]~output_o ),
	.obar());
// synopsys translate_off
defparam \frame_seq_out[6]~output .bus_hold = "false";
defparam \frame_seq_out[6]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \frame_seq_out[7]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\frame_seq_out[7]~output_o ),
	.obar());
// synopsys translate_off
defparam \frame_seq_out[7]~output .bus_hold = "false";
defparam \frame_seq_out[7]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \frame_seq_out[8]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\frame_seq_out[8]~output_o ),
	.obar());
// synopsys translate_off
defparam \frame_seq_out[8]~output .bus_hold = "false";
defparam \frame_seq_out[8]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \frame_seq_out[9]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\frame_seq_out[9]~output_o ),
	.obar());
// synopsys translate_off
defparam \frame_seq_out[9]~output .bus_hold = "false";
defparam \frame_seq_out[9]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \frame_seq_out[10]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\frame_seq_out[10]~output_o ),
	.obar());
// synopsys translate_off
defparam \frame_seq_out[10]~output .bus_hold = "false";
defparam \frame_seq_out[10]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \frame_seq_out[11]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\frame_seq_out[11]~output_o ),
	.obar());
// synopsys translate_off
defparam \frame_seq_out[11]~output .bus_hold = "false";
defparam \frame_seq_out[11]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \xmit_done_out~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\xmit_done_out~output_o ),
	.obar());
// synopsys translate_off
defparam \xmit_done_out~output .bus_hold = "false";
defparam \xmit_done_out~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \data_out[0]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\data_out[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \data_out[0]~output .bus_hold = "false";
defparam \data_out[0]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \data_out[1]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\data_out[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \data_out[1]~output .bus_hold = "false";
defparam \data_out[1]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \data_out[2]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\data_out[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \data_out[2]~output .bus_hold = "false";
defparam \data_out[2]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \data_out[3]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\data_out[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \data_out[3]~output .bus_hold = "false";
defparam \data_out[3]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_ibuf \ctrl_block_in[0]~input (
	.i(ctrl_block_in[0]),
	.ibar(gnd),
	.o(\ctrl_block_in[0]~input_o ));
// synopsys translate_off
defparam \ctrl_block_in[0]~input .bus_hold = "false";
defparam \ctrl_block_in[0]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \ctrl_block_in[1]~input (
	.i(ctrl_block_in[1]),
	.ibar(gnd),
	.o(\ctrl_block_in[1]~input_o ));
// synopsys translate_off
defparam \ctrl_block_in[1]~input .bus_hold = "false";
defparam \ctrl_block_in[1]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \ctrl_block_in[2]~input (
	.i(ctrl_block_in[2]),
	.ibar(gnd),
	.o(\ctrl_block_in[2]~input_o ));
// synopsys translate_off
defparam \ctrl_block_in[2]~input .bus_hold = "false";
defparam \ctrl_block_in[2]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \ctrl_block_in[3]~input (
	.i(ctrl_block_in[3]),
	.ibar(gnd),
	.o(\ctrl_block_in[3]~input_o ));
// synopsys translate_off
defparam \ctrl_block_in[3]~input .bus_hold = "false";
defparam \ctrl_block_in[3]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \ctrl_block_in[4]~input (
	.i(ctrl_block_in[4]),
	.ibar(gnd),
	.o(\ctrl_block_in[4]~input_o ));
// synopsys translate_off
defparam \ctrl_block_in[4]~input .bus_hold = "false";
defparam \ctrl_block_in[4]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \ctrl_block_in[5]~input (
	.i(ctrl_block_in[5]),
	.ibar(gnd),
	.o(\ctrl_block_in[5]~input_o ));
// synopsys translate_off
defparam \ctrl_block_in[5]~input .bus_hold = "false";
defparam \ctrl_block_in[5]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \ctrl_block_in[6]~input (
	.i(ctrl_block_in[6]),
	.ibar(gnd),
	.o(\ctrl_block_in[6]~input_o ));
// synopsys translate_off
defparam \ctrl_block_in[6]~input .bus_hold = "false";
defparam \ctrl_block_in[6]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \ctrl_block_in[7]~input (
	.i(ctrl_block_in[7]),
	.ibar(gnd),
	.o(\ctrl_block_in[7]~input_o ));
// synopsys translate_off
defparam \ctrl_block_in[7]~input .bus_hold = "false";
defparam \ctrl_block_in[7]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \ctrl_block_in[8]~input (
	.i(ctrl_block_in[8]),
	.ibar(gnd),
	.o(\ctrl_block_in[8]~input_o ));
// synopsys translate_off
defparam \ctrl_block_in[8]~input .bus_hold = "false";
defparam \ctrl_block_in[8]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \ctrl_block_in[9]~input (
	.i(ctrl_block_in[9]),
	.ibar(gnd),
	.o(\ctrl_block_in[9]~input_o ));
// synopsys translate_off
defparam \ctrl_block_in[9]~input .bus_hold = "false";
defparam \ctrl_block_in[9]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \ctrl_block_in[10]~input (
	.i(ctrl_block_in[10]),
	.ibar(gnd),
	.o(\ctrl_block_in[10]~input_o ));
// synopsys translate_off
defparam \ctrl_block_in[10]~input .bus_hold = "false";
defparam \ctrl_block_in[10]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \ctrl_block_in[11]~input (
	.i(ctrl_block_in[11]),
	.ibar(gnd),
	.o(\ctrl_block_in[11]~input_o ));
// synopsys translate_off
defparam \ctrl_block_in[11]~input .bus_hold = "false";
defparam \ctrl_block_in[11]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \ctrl_block_in[12]~input (
	.i(ctrl_block_in[12]),
	.ibar(gnd),
	.o(\ctrl_block_in[12]~input_o ));
// synopsys translate_off
defparam \ctrl_block_in[12]~input .bus_hold = "false";
defparam \ctrl_block_in[12]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \ctrl_block_in[13]~input (
	.i(ctrl_block_in[13]),
	.ibar(gnd),
	.o(\ctrl_block_in[13]~input_o ));
// synopsys translate_off
defparam \ctrl_block_in[13]~input .bus_hold = "false";
defparam \ctrl_block_in[13]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \ctrl_block_in[14]~input (
	.i(ctrl_block_in[14]),
	.ibar(gnd),
	.o(\ctrl_block_in[14]~input_o ));
// synopsys translate_off
defparam \ctrl_block_in[14]~input .bus_hold = "false";
defparam \ctrl_block_in[14]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \ctrl_block_in[15]~input (
	.i(ctrl_block_in[15]),
	.ibar(gnd),
	.o(\ctrl_block_in[15]~input_o ));
// synopsys translate_off
defparam \ctrl_block_in[15]~input .bus_hold = "false";
defparam \ctrl_block_in[15]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \ctrl_block_in[16]~input (
	.i(ctrl_block_in[16]),
	.ibar(gnd),
	.o(\ctrl_block_in[16]~input_o ));
// synopsys translate_off
defparam \ctrl_block_in[16]~input .bus_hold = "false";
defparam \ctrl_block_in[16]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \ctrl_block_in[17]~input (
	.i(ctrl_block_in[17]),
	.ibar(gnd),
	.o(\ctrl_block_in[17]~input_o ));
// synopsys translate_off
defparam \ctrl_block_in[17]~input .bus_hold = "false";
defparam \ctrl_block_in[17]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \ctrl_block_in[18]~input (
	.i(ctrl_block_in[18]),
	.ibar(gnd),
	.o(\ctrl_block_in[18]~input_o ));
// synopsys translate_off
defparam \ctrl_block_in[18]~input .bus_hold = "false";
defparam \ctrl_block_in[18]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \ctrl_block_in[19]~input (
	.i(ctrl_block_in[19]),
	.ibar(gnd),
	.o(\ctrl_block_in[19]~input_o ));
// synopsys translate_off
defparam \ctrl_block_in[19]~input .bus_hold = "false";
defparam \ctrl_block_in[19]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \ctrl_block_in[20]~input (
	.i(ctrl_block_in[20]),
	.ibar(gnd),
	.o(\ctrl_block_in[20]~input_o ));
// synopsys translate_off
defparam \ctrl_block_in[20]~input .bus_hold = "false";
defparam \ctrl_block_in[20]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \ctrl_block_in[21]~input (
	.i(ctrl_block_in[21]),
	.ibar(gnd),
	.o(\ctrl_block_in[21]~input_o ));
// synopsys translate_off
defparam \ctrl_block_in[21]~input .bus_hold = "false";
defparam \ctrl_block_in[21]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \ctrl_block_in[22]~input (
	.i(ctrl_block_in[22]),
	.ibar(gnd),
	.o(\ctrl_block_in[22]~input_o ));
// synopsys translate_off
defparam \ctrl_block_in[22]~input .bus_hold = "false";
defparam \ctrl_block_in[22]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \ctrl_block_in[23]~input (
	.i(ctrl_block_in[23]),
	.ibar(gnd),
	.o(\ctrl_block_in[23]~input_o ));
// synopsys translate_off
defparam \ctrl_block_in[23]~input .bus_hold = "false";
defparam \ctrl_block_in[23]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \clk_phy~input (
	.i(clk_phy),
	.ibar(gnd),
	.o(\clk_phy~input_o ));
// synopsys translate_off
defparam \clk_phy~input .bus_hold = "false";
defparam \clk_phy~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \reset~input (
	.i(reset),
	.ibar(gnd),
	.o(\reset~input_o ));
// synopsys translate_off
defparam \reset~input .bus_hold = "false";
defparam \reset~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \data_in[0]~input (
	.i(data_in[0]),
	.ibar(gnd),
	.o(\data_in[0]~input_o ));
// synopsys translate_off
defparam \data_in[0]~input .bus_hold = "false";
defparam \data_in[0]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \data_in[4]~input (
	.i(data_in[4]),
	.ibar(gnd),
	.o(\data_in[4]~input_o ));
// synopsys translate_off
defparam \data_in[4]~input .bus_hold = "false";
defparam \data_in[4]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \data_in[1]~input (
	.i(data_in[1]),
	.ibar(gnd),
	.o(\data_in[1]~input_o ));
// synopsys translate_off
defparam \data_in[1]~input .bus_hold = "false";
defparam \data_in[1]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \data_in[5]~input (
	.i(data_in[5]),
	.ibar(gnd),
	.o(\data_in[5]~input_o ));
// synopsys translate_off
defparam \data_in[5]~input .bus_hold = "false";
defparam \data_in[5]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \data_in[2]~input (
	.i(data_in[2]),
	.ibar(gnd),
	.o(\data_in[2]~input_o ));
// synopsys translate_off
defparam \data_in[2]~input .bus_hold = "false";
defparam \data_in[2]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \data_in[6]~input (
	.i(data_in[6]),
	.ibar(gnd),
	.o(\data_in[6]~input_o ));
// synopsys translate_off
defparam \data_in[6]~input .bus_hold = "false";
defparam \data_in[6]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \data_in[3]~input (
	.i(data_in[3]),
	.ibar(gnd),
	.o(\data_in[3]~input_o ));
// synopsys translate_off
defparam \data_in[3]~input .bus_hold = "false";
defparam \data_in[3]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \data_in[7]~input (
	.i(data_in[7]),
	.ibar(gnd),
	.o(\data_in[7]~input_o ));
// synopsys translate_off
defparam \data_in[7]~input .bus_hold = "false";
defparam \data_in[7]~input .simulate_z_as = "z";
// synopsys translate_on

assign frame_seq_out[0] = \frame_seq_out[0]~output_o ;

assign frame_seq_out[1] = \frame_seq_out[1]~output_o ;

assign frame_seq_out[2] = \frame_seq_out[2]~output_o ;

assign frame_seq_out[3] = \frame_seq_out[3]~output_o ;

assign frame_seq_out[4] = \frame_seq_out[4]~output_o ;

assign frame_seq_out[5] = \frame_seq_out[5]~output_o ;

assign frame_seq_out[6] = \frame_seq_out[6]~output_o ;

assign frame_seq_out[7] = \frame_seq_out[7]~output_o ;

assign frame_seq_out[8] = \frame_seq_out[8]~output_o ;

assign frame_seq_out[9] = \frame_seq_out[9]~output_o ;

assign frame_seq_out[10] = \frame_seq_out[10]~output_o ;

assign frame_seq_out[11] = \frame_seq_out[11]~output_o ;

assign xmit_done_out = \xmit_done_out~output_o ;

assign data_out[0] = \data_out[0]~output_o ;

assign data_out[1] = \data_out[1]~output_o ;

assign data_out[2] = \data_out[2]~output_o ;

assign data_out[3] = \data_out[3]~output_o ;

endmodule
